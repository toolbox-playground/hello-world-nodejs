name: image-push

on: 
    push:
      branches:
        - main
      paths-ignore:
        - 'CHANGELOG.md'
        - 'package.json'
        - 'package-lock.json'
    workflow_dispatch: # Evento que aciona o fluxo de trabalho manualmente
      inputs: # Define os inputs do fluxo de trabalho
        name: # Define o input "name"
          description: 'Trigger manual do Workflow' # Descrição do input

jobs: 
    docker-buid:
        name: docker-buid
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v3
              with:
                token: ${{ secrets.ACTIONS_TOKEN }}

            - name: Install and Build
              run: |
                npm install
              working-directory: ./app/
            
            - name: Configuring Git Account
              run: |
                git config --global user.email "pipelines@toolboxdevops.cloud"
                git config --global user.name "Toolbox Automation"

            - name: Docker Login
              # You may pin to the exact commit or the version.
              # uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446
              uses: docker/login-action@v3.2.0
              with:
                username: toolboxdevopsplayground
                password: ${{ secrets.DOCKER_TOKEN }}

            - name: Build of docker image
              run: |
                VERSION=$(jq -r '.version' app/package.json)
                docker build -t toolboxdevopsplayground/hello-world-nodejs:latest .
                docker push toolboxdevopsplayground/hello-world-nodejs:latest

    versioning-control:
        name: versioning-control
        runs-on: ubuntu-latest
        needs: docker-buid
        steps:
            - name: Checkout
              uses: actions/checkout@v3
              with:
                token: ${{ secrets.ACTIONS_TOKEN }}

            - name: Install and Build
              run: |
                npm install

            - name: Configuring Git Account
              run: |
                git config --global user.email "pipelines@toolboxdevops.cloud"
                git config --global user.name "Toolbox Automation"

            - name: Check commit message for specific keywords
              run: |
                text=$(git log -1 --no-merges --pretty=%B)
                echo $text
                if [[ $text =~ (fix|patch) ]]; then
                  npm run release -- --release-as patch
                  echo "{{ Patching Versioning }}"
                elif [[ $text =~ (BREAKING\ CHANGE) ]]; then
                  npm run release -- --release-as patch
                  echo "{{ Major Versioning }}"
                elif [[ $text =~ (feat) ]]; then
                  echo "{{ Minor Versioning }}"
                  npm run release -- --release-as minor
                else
                  npm run release -- --release-as patch
                  echo {{ Default Patching Versioning }}
                fi
                git push --follow-tags origin main


